modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
fitted(modelFit)
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 4
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_class), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- dfnode_id[,c("node_id","class_id","ratio")]
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 4
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_class - 1), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- dfnode_id[,c("node_id","class_id","ratio")]
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
coef(modelFit)
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 4
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_classcoef), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- dfnode_id[,c("node_id","class_id","ratio")]
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
coef(modelFit)
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 4
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_class), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- dfnode_id[,c("node_id","class_id","ratio")]
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
coef(modelFit)
predict(modelFit, dfclass_id)
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 5
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_class), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- dfnode_id[,c("node_id","class_id","ratio")]
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
coef(modelFit)
predict(modelFit, dfclass_id)
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 6
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_class), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- dfnode_id[,c("node_id","class_id","ratio")]
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
coef(modelFit)
predict(modelFit, dfclass_id)
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 3
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_class), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- dfnode_id[,c("node_id","class_id","ratio")]
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
coef(modelFit)
predict(modelFit, dfclass_id)
summary(modelFit)
remove(dfnode_id)
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 3
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_class), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- dfnode_id[,c("node_id","class_id","ratio")]
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
coef(modelFit)
predict(modelFit, dfclass_id)
View(dfclass_id)
View(dfclass_id)
remove(dfnode_id)
remove(dfclass_id)
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 3
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_class), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- dfnode_id[,c("node_id","class_id","ratio")]
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
coef(modelFit)
predict(modelFit, dfclass_id)
dfnode_id <- droplevels(dfnode_id)
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 3
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_class), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- droplevels(dfnode_id[,c("node_id","class_id","ratio")])
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
coef(modelFit)
predict(modelFit, dfclass_id)
levels(dfnode_id$class_id)
View(dfnode_id)
dftest <- dataframe(class_id = levels(dfnode_id$class_id))
dftest <- data.frame(class_id = levels(dfnode_id$class_id))
View(dftest)
predict(modelFit, dftest)
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 3
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_class), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- droplevels(dfnode_id[,c("node_id","class_id","ratio")])
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
coef(modelFit)
dftest <- dataframe(class_id = levels(dfnode_id$class_id))
predict(modelFit, dfclass_id)
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 3
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_class), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- droplevels(dfnode_id[,c("node_id","class_id","ratio")])
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
dftest <- data.frame(class_id = levels(dfnode_id$class_id))
predict(modelFit, dfclass_id)
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 3
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_class), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- droplevels(dfnode_id[,c("node_id","class_id","ratio")])
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
dftest <- data.frame(class_id = levels(dfnode_id$class_id))
predict(modelFit, dftest)
summary(modelFit)
setwd("~/GitHub/devdataprod")
shiny::runApp()
plot(ratio~class_id, data=dfnode_id)
qplot(ratio~class_id, data=dfnode_id)
qplot(ratio~class_id, data=dfnode_id,pch = 20, cex = 3)
plot(ratio~class_id, data=dfnode_id,pch = 20, cex = 3)
plot(ratio~class_id, data=dfnode_id,pch = 20, cex = 3)
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
dftest <- data.frame(class_id = levels(dfnode_id$class_id))
predict(modelFit, dftest)
plot(modelFit)
kmeans(dfnode_id[, c("ratio", "ratio")], no_class )
test <- kmeans(dfnode_id[, c("ratio", "ratio")], no_class )
test$centers
test2 <- test$centers
par(mar = c(5.1, 4.1, 0, 1))
plot(points(ratio~class_id, data=dfnode_id,pch = 20, cex = 3))
plot(ratio~class_id, data=dfnode_id,pch = 20, cex = 3, type = p)
plot(ratio~class_id, data=dfnode_id,pch = 20, cex = 3, type = pair)
plot(ratio~class_id, data=dfnode_id,pch = 20, cex = 3)
plot(ratio~class_id, data=dfnode_id,pch = 20, cex = 3, col = class_id)
plot(ratio, class_id, data=dfnode_id,pch = 20, cex = 3, col = class_id)
plot(dfnode_id$ratio, dfnode_id$class_id, data=dfnode_id,pch = 20, cex = 3, col = class_id)
plot(dfnode_id$ratio, dfnode_id$class_id,pch = 20, cex = 3, col = class_id)
plot(dfnode_id$ratio, dfnode_id$class_id,pch = 20, cex = 3, col = dfnode_id$class_id)
plot(dfnode_id$ratio, dfnode_id$class_id,pch = 2, cex = 3, col = dfnode_id$class_id)
plot(dfnode_id$ratio, dfnode_id$class_id,pch = 20, cex = 3, col = dfnode_id$class_id)
plot(dfnode_id$ratio, dfnode_id$class_id,pch = 0, cex = 3, col = dfnode_id$class_id)
plot(dfnode_id$ratio, dfnode_id$class_id,pch = 1, cex = 3, col = dfnode_id$class_id)
plot(dfnode_id$ratio, dfnode_id$class_id,pch = 1, cex = 1, col = dfnode_id$class_id)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
plot(dfnode_id$class_id,dfnode_id$ratio, pch = 1, cex = 1, col = dfnode_id$class_id)
plot(dfnode_id$class_id,dfnode_id$ratio, pch = 1, cex = 1, col = dfnode_id$class_id)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
plot(dfnode_id$class_id,dfnode_id$ratio, pch = 1, cex = 1, col = dfnode_id$class_id)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 3
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_class), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- droplevels(dfnode_id[,c("node_id","class_id","ratio")])
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
dftest <- data.frame(class_id = levels(dfnode_id$class_id))
predict(modelFit, dftest)
ggplot(dfnode_id, aes(class_id, ratio, color=class_id))
library(plyr)
library(caret)
remove(dfnode_id)
remove(modelFit)
dfclass_id = data.frame (class_id = c("AA", "AB", "AC", "BA", "BB", "BC"), ratio = c(2.5, 3.0, 1.5, 2.0, 4.0, 2.2))
no_class <- 3
no_node <- 100
dfnode_id <- data.frame (node_id = paste0 (sample(LETTERS[1:10], replace = TRUE), seq(1:no_node)),
class_id = sample(sample(dfclass_id$class_id, size = no_class), size = no_node, replace = TRUE))
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample1'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample2'
dfnode_id <- join(dfnode_id, dfclass_id, by='class_id', type='left', match='all')
colnames(dfnode_id)[which(colnames(dfnode_id) == 'ratio')] <- 'sample3'
dfnode_id$sample1 <- with( dfnode_id , jitter(sample1) )
dfnode_id$sample2 <- with( dfnode_id , jitter(sample2) )
dfnode_id$sample3 <- with( dfnode_id , jitter(sample3) )
dfnode_id$ratio <- with( dfnode_id , (sample1+sample2+sample3)/3.00 )
dfnode_id <- droplevels(dfnode_id[,c("node_id","class_id","ratio")])
modelFit <- train(ratio~class_id, data=dfnode_id, method="lm")
modelFit$coef
dftest <- data.frame(class_id = levels(dfnode_id$class_id))
predict(modelFit, dftest)
ggplot(dfnode_id, aes(class_id, ratio, color=class_id)) + geom_point()
shiny::runApp()
pointsFit <- data.frame (ratio = predict(modelFit, dftest) , class_id = levels(dfnode_id$class_id))
ggplot(dfnode_id, aes(class_id, ratio, color=class_id)) + geom_point()
+ geom_point(pointsFit, aes(class_id, ratio, color=class_id))
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id)) + geom_point()
plot  + geom_point(pointsFit, aes(class_id, ratio, color=class_id))
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id)) + geom_point()
plot  + geom_point(pointsFit, aes(class_id, ratio, color=class_id))
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id)) + geom_point()
plot
plot  + geom_point(data=pointsFit, aes(class_id, ratio, color=class_id))
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id)) + geom_point(alpha = 1/10)
plot  + geom_point(data=pointsFit, aes(class_id, ratio, color="black"))
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id)) + geom_point(alpha = 1/2)
plot  + geom_point(data=pointsFit, aes(class_id, ratio, color="black", size = 4))
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id)) + geom_point(alpha = 1/2)
plot  + geom_point(data=pointsFit, aes(class_id, ratio, color="black", size = 4, shape = 4 , guide = FALSE))
plot  + geom_point(data=pointsFit, aes(class_id, ratio, color="black", size = 4, shape = 4 ))
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id)) + geom_point(alpha = 1/2)
plot  + geom_point(data=pointsFit, aes(class_id, ratio, color="black", size = 4, shape = 4 ))
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id)) + geom_point(alpha = 1/2)
plot
plot  + geom_point(data=pointsFit, aes(class_id, ratio, color="black", size = 4))
plot  + geom_point(data=pointsFit, aes(class_id, ratio, color="black", size = 4, shape = 4))
plot  + geom_point(data=pointsFit, aes(class_id, ratio, color="black", size = 4, shape = "4"))
plot  + geom_point(data=pointsFit, aes(class_id, ratio, color="black", size = 4, shape = c(4)))
plot  + geom_point(data=pointsFit, aes(class_id, ratio, color="black", size = 4, shape = "5"))
plot  + geom_point(data=pointsFit, aes(class_id, ratio, color="black", size = 4, shape = "5",alpha = 1))
plot  + geom_point(data=pointsFit, aes(class_id, ratio), color="black", size = 4, shape = "5",alpha = 1))
plot  + geom_point(data=pointsFit, aes(class_id, ratio), color="black", size = 4, shape = "5",alpha = 1)
plot  + geom_point(data=pointsFit, aes(class_id, ratio), color="black", size = 4, shape = 4,alpha = 1)
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id), guide = FALSE) + geom_point(alpha = 1/2)
plot
plot  + geom_point(data=pointsFit, aes(class_id, ratio), color="black", size = 4, shape = 4,alpha = 1)
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id), guide = FALSE) + geom_point(alpha = 1/2)
plot  + geom_point(data=pointsFit, aes(class_id, ratio), color="black", size = 10, shape = 4,alpha = 1)
summary(pointsFit)
pointsFit
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id), guide = 'none') + geom_point(alpha = 1/2)
plot  + geom_point(data=pointsFit, aes(class_id, ratio), color="black", size = 10, shape = 4,alpha = 1)
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id,guide = 'none') ) + geom_point(alpha = 1/2)
plot  + geom_point(data=pointsFit, aes(class_id, ratio), color="black", size = 10, shape = 4,alpha = 1)
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id) ) + geom_point(alpha = 1/2,guide = 'none')
plot
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id) ) + geom_point(alpha = 1/2)+ scale_alpha(guide = 'none')
plot  + geom_point(data=pointsFit, aes(class_id, ratio), color="black", size = 10, shape = 4,alpha = 1)
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id) ) + geom_point(alpha = 1/2)+ scale_alpha(guide = 'none')
plot  + geom_point(data=pointsFit, aes(class_id, ratio), color="black", size = 10, shape = 4,alpha = 1)
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id) ) + geom_point(alpha = 1/2)+ scale_class_id(guide = 'none')
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id),show_guide = FALSE ) + geom_point(alpha = 1/2)
plot
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id,show_guide = FALSE )) + geom_point(alpha = 1/2)
plot
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id )) + geom_point(alpha = 1/2)
plot
plot  + geom_point(data=pointsFit, aes(class_id, ratio), color="black", size = 10, shape = 4,alpha = 10)
plot  + geom_point(data=pointsFit, aes(class_id, ratio), color="black", size = 10, shape = 4,alpha = 1)
??ggplot
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id )) + geom_point(alpha = 1/2)
plot  + geom_point(data=pointsFit, aes(class_id, ratio), colour='black', size = 10, shape = 4,alpha = 1)
??ggplot
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id )) + geom_point(alpha = 1/2) + guides(label = FALSE)
plot
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id )) + geom_point(alpha = 1/2) + guide_legend(label = FALSE)
plot
remove(plot)
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id )) + geom_point(alpha = 1/2) + guide_legend(label = FALSE)
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id, guide_legend(label = FALSE))) + geom_point(alpha = 1/2)
plot
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id, guide_legend(Title = "Fart"))) + geom_point(alpha = 1/2)
plot
guide_legend(label = FALSE)
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id, ), guide_legend(label = FALSE)) + geom_point(alpha = 1/2)
plot
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id, )) + geom_point(alpha = 1/2, guide_legend(label = FALSE))
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id, guide_legend(label = FALSE) )) + geom_point(alpha = 1/2)
plot
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id, show_guide = FALSE)) + geom_point(alpha = 1/2)
plot
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id)) + geom_point(alpha = 1/2) + scale_size( guide = "none" )
plot
plot <- ggplot(dfnode_id, aes(class_id, ratio, color=class_id, guide = 'none')) + geom_point(alpha = 1/2)
plot
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
